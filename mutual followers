package gradleproject15;

import java.util.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }
    public static List<Integer> findMutualFriends(List<List<Integer>> list, List<Integer> v) {
        int f_index = 0;
        int s_index = 0;

        List<Integer> result = new ArrayList<>();
        if (v.size() > 2) {                                     //use recurtion
            s_index = v.get(0);
            v.remove(0);
            v = findMutualFriends(list, v);
            for (int i = 0; i < v.size(); i++) {                //find mutual between the result of recursion and fisrt vector
                for (int j = 1; j < list.get(s_index).size(); j++) {
                    if (v.get(i).equals(list.get(s_index).get(j))) {
                        result.add(v.get(i));
                    }
                }
            }
        } else {                                                //base case to get mutual followers between two persons
            for (int i = 0; i < list.size(); i++) {             //find index of the first person
                if (v.get(0).equals(list.get(i).get(0))) {
                    f_index = i;
                    break;
                }
            }
            for (int i = 0; i < list.size(); i++) {            //find index of the second person
                if (v.get(1).equals(list.get(i).get(0))) {
                    s_index = i;
                    break;
                }
            }

            for (int i = 1; i < list.get(f_index).size(); i++) {                //find the same follwers for two persons
                for (int j = 1; j < list.get(s_index).size(); j++) {
                    if (list.get(f_index).get(i).equals(list.get(s_index).get(j))) {
                        result.add(list.get(f_index).get(i));
                    }
                }
            }
        }

        return result;
    }
}
